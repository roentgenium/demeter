# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Bruce Ravel
# This file is distributed under the same license as the Athena package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Athena 0.9.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-27 20:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../ui/mark.rst:44
msgid "Marking groups"
msgstr "グループのマーク"

#: ../../ui/mark.rst:46
msgid ""
"As data are imported in :demeter:`athena`, they are listed in the Data "
"groups list. Each entry in the list includes the name of the data set, "
"the text of which acts something like a hyperlink in that clicking on "
"that text will insert the analysis parameters for that group into the "
"main window. Each entry also has a little check button which is used for "
"*marking* the group. Much of :demeter:`athena`'s functionality revolves "
"around marked groups. For example, the marked groups are the ones plotted"
" when a purple plotting button is pressed, merging is done on the set of "
"marked groups and, many of the data processing and data analysis chores "
"use the marked groups."
msgstr ""
"データを :demeter:`athena` に読み込むと，データグループリストに追加されます．"
"リスト中のそれぞれの項目はデータセットの名前を含んでおり，項目名の"
"テキストをクリックすると，その解析パラメータがメインウィンドウに"
"表示されます．それぞれの項目はグループに対して *マーク* するための"
"小さなチェックボックスを持っています．:demeter:`athena` はマークされたグループを"
"元に機能することが多いです．例えば，マークされたグループは紫色の"
"プロットボタンをクリックしたときにプロットされますし，マージは"
"マークされたグループのセットに対して行われ，多くのデータ処理や"
"データ解析がマークされたグループに対して行われます．"

#: ../../ui/mark.rst:56
msgid ""
":demeter:`athena` offers a number of simple tools for marking or "
"unmarking groups.  These are found in the :guilabel:`Mark` menu, as shown"
" below, and also have keyboard bindings. :button:`Alt`-:button:`a` marks "
"all groups, :button:`Alt`-:button:`u` unmarks all groups, and "
":button:`Alt`-:button:`i` inverts the markings such that the marked "
"groups become unmarked and the unmarked ones become marked. The three "
"buttons above the group list also serve to make all, mark none, and "
"invert the marks."
msgstr ""
":demeter:`athena` では，簡単にマークするためのいくつかのツールを提供しています．"
"下に示すように，:guilabel:`Mark` メニューにある機能は，キーボードショート"
"カットからも操作することもでき，:button:`Alt`-:button:`a` で全てのグループ"
"をマークする，:button:`Alt`-:button:`u` は全てのグループのマークを外し，"
":button:`Alt`-:button:`i` は全てのグループのチェックを反転します．"
"グループリストの上にある3個のボタンでも，全てチェック，全てのチェックを"
"外す，全てのチェックを反転の操作が可能です．"

#: ../../ui/mark.rst:70
msgid ""
"The group marking options are found in the :guilabel:`Mark` menu. Making "
"all groups, removing all marks, or inverting all marks can be done using "
"the mark buttons at the top of the group list."
msgstr ""
":guilabel:`Mark` メニューには，グループのマークに関するオプションがあり，"
"全てチェックする，全てのチェックを外すあるいは全てのチェックを反転する"
"ことができます．"

#: ../../ui/mark.rst:76
msgid "Using regular expressions to mark groups"
msgstr "正規表現を利用したグループのマーク"

#: ../../ui/mark.rst:78
msgid ""
":mark:`lightning,..` There is one more tool which is considerably more "
"powerful and flexible.  In the :guilabel:`Mark` menu, this last marking "
"tool it is called *Mark regex* and it is bound to "
":button:`Alt`-:button:`r`."
msgstr ""
":mark:`lightning,..` マークの選択にはより強力で柔軟な使い方ができるツールが"
"あります．:guilabel:`Mark` メニューの最後には，*Mark regexp* というツール"
"があり，これは，:button:`Alt`-:button:`r` というショートカットに"
"関連づけられています．"

#: ../../ui/mark.rst:83
msgid "So, what does *regex* mean?"
msgstr "ところで，*regex* は何か分かりますか？"

#: ../../ui/mark.rst:85
msgid ""
"Regex is short for *regular expression*, which is a somewhat formal way "
"of saying :quoted:`pattern matching`. When you :quoted:`mark regex`, you "
"will be prompted for a string in the echo area at the bottom of the "
":demeter:`athena` window. This prompt is exactly like the one used `to "
"rename groups <glist.html#reorganizing-the-group-list>`__. This string is"
" compared to the names of all the groups in the Data groups list. Those "
"which match the string become marked and those which fail to match become"
" unmarked. Let me give you some examples. In a project file containing "
"various vanadium standards, the Data groups list includes"
msgstr ""
"Regex は *正規表現（regular expression）* の省略形で，いくらか形式的な"
"意味で :quoted:`pattern matching` を指しています．:quoted:`mark regex` "
"を使うと，:demeter:`athena` ウィンドウの下のエコーエリアに文字列を入力するように"
"促されます．このプロンプトは，"
"`グループラベル名の変更 <glist.html#reorganizing-the-group-list>`__ の時と"
"同じようなものです．入力された文字列がデータグループリストにあるすべての"
"グループの名前と比較され，文字列と一致した場合はマークされ，一致しなかった場合は"
"マークが外れます．例えば，数種類のバナジウム標準試料を含むプロジェクト"
"ファイルで，データグループリストは，"

#: ../../ui/mark.rst:101
msgid ""
"A project with several vanadium standards imported. The regular "
"expression shown matches all strings with the number :quoted:`1` at the "
"end. Thus all groups with the :quoted:`.1` extension will be marked."
msgstr ""
"数種類のバナジウム標準試料のプロジェクトファイルを読み込んだ画面．"
"この正規表現は，数字の :quoted:`1` で終わるすべての文字列に一致します．"
"よって，拡張子が :quoted:`.1` になっているすべてのグループがマークされます．"

#: ../../ui/mark.rst:105
msgid ""
"These represent the various oxidation states of vanadium. The last item "
"is an unknown sample which can be interpreted as a linear combination of "
"the other five samples. There are two scans of each sample, as indicated "
"by the ``.1`` and ``.2``."
msgstr ""
"また，この数字はバナジウムの酸化状態を表しています．最後の項目は未知試料ですが，"
"他の5つの試料の線形結合で表現することができます．"
"これらはそれぞれ2回ずつ測定されたので，ラベルに ``.1`` や ``.2`` と示されています．"

#: ../../ui/mark.rst:110
msgid ""
"To make plots of arbitrary combinations of spectra, you can click the "
"appropriate mark buttons on and off. Using regular expression marking is "
"quicker and easier. I'll start with a couple simple examples. If you want"
" to mark only the vanadium foil spectra, hit :button:`Alt`-:button:`r` "
"and then enter foil. To mark the V2O3 and V2O5, but none of the others, "
"hit :button:`Alt`-:button:`r` and enter V2."
msgstr ""
"任意のスペクトルを組み合わせてプロットするには，対応するチェックを付けたり"
"外したりするとよいです．正規表現を使うと，早く簡単に行うことができます．"
"まずは，シンプルな例から紹介しましょう．バナジウム箔のスペクトルだけを"
"マークしたい時は，:button:`Alt`-:button:`r` を押し，テキストボックスに"
" foil と入力して下さい．V2O3 と V2O5 だけをチェックしたい時は，"
":button:`Alt`-:button:`r` を押し， V2 と入力して下さい．"

#: ../../ui/mark.rst:117
msgid ""
"In fact, you get to use the entire power of perl's regular expression "
"language (see `the regular expression documentation at CPAN "
"<http://search.cpan.org/dist/perl/pod/perlre.pod>`__ for all the "
"details). This means you can use *metacharacters* |nd| symbols which "
"represent conceptual aspects of strings. Here are a few examples:"
msgstr ""
"実際には，perl の正規表現がすべて利用できます．（詳細は "
" `CPAN にある正規表現の文書 <http://search.cpan.org/dist/perl/pod/perlre.pod>`__ "
"を参照して下さい)．つまり，文字列の概念的な表現であるシンボル，"
"メタ文字，を使うこともできます．例を紹介しましょう．"

#: ../../ui/mark.rst:123
msgid ""
"To mark only the V2O3 and VO2 data: :regexp:`O[23]`. That tells "
":demeter:`athena` to mark the groups whose names have the letter O "
"followed by either 2 or 3."
msgstr ""
"V2O3 と VO2 のファイルだけチェックしたい時: :regexp:`O[23]`．"
":demeter:`athena` は，ラベル名が O の次に 2 か 3 がくるグループをチェックします．"

#: ../../ui/mark.rst:127
msgid ""
"To mark only the first scans of each sample: :regexp:`1$`. The "
":regexp:`$` metacharacter represents the end of a word, thus this regular"
" expression matches all groups whose name ends in the number 1."
msgstr ""
"各試料の最初の測定だけチェックしたい時: :regexp:`1$` ．"
"メタ文字の :regexp:`$` は単語の終わりを表すので，ラベル名が"
数字の 1 で終わるものと一致します．"

#: ../../ui/mark.rst:132
msgid ""
"To mark only the foil and unknown data: :regexp:`foil|unknown`. The "
":regexp:`|` metacharacter means :quoted:`or`, so this regular expression "
"matches the groups with foil or unknown in the name. Actually this "
"regular expression could have been much shorter, both :regexp:`[fu]` and "
":regexp:`f|u` would have worked in this case, given this set of group "
"names."
msgstr ""
"箔と未知試料だけをチェックしたい時: :regexp:`foil|unknown` ．"
"メタ文字の :regexp:`|` は :quoted:`or` を意味するので，この正規表現は"
"ラベル名に foil あるいは unknown を含むグループに一致します．"
"このプロジェクトファイルの場合は正規表現はもっと短く，"
":regexp:`[fu]` や :regexp:`f|u` のように入力しても同じ結果が得られるでしょう．"

#: ../../ui/mark.rst:139
msgid ""
"Regular expressions are a large and fascinating topic of study, but "
"beyond the scope of this document. Try Wikipedia's `excellent article on "
"regular expressions <http://en.wikipedia.org/wiki/Regular_expression>`__ "
"for more information. `Mastering Regular Expressions "
"<http://www.oreilly.com/catalog/regex3/>`__ by Jeffrey Freidl is a superb"
" book on the subject."
msgstr ""
"正規表現は応用範囲が広く，興味深い技法ですが，この文章のスコープを"
"超えてしまいます．詳細は `Wikipeia の正規表現 <http://en.wikipedia.org/wiki/Regular_expression>`__ "
"の記事を参照してください．Jeffrey Freidl による "
" `正規表現を覚えよう <http://www.oreilly.com/catalog/regex3/>`__ "
"という本もおすすめです．"

#: ../../ui/mark.rst:147
msgid ""
"Any regular expression that works in perl will work for marking groups in"
" :demeter:`athena`. If you enter an invalid regular expression, "
":demeter:`athena` will tell you. Regular expression marking is a "
"wonderful tool, especially for projects containing very many data sets."
msgstr ""
"perl で利用可能な正規表現が，:demeter:`athena` でグループにマークする際にも使えます．"
"適切でない正規表現を入力すると，:demeter:`athena` はエラーを表示します．"
"正規表現は，特に多数のデータを扱う時に役立ちます．"

#: ../../ui/mark.rst:153
msgid ""
"The regular expression is sent exactly as entered to perl's regular "
"expression engine. You thus have the **full** power of perl's regular "
"expression engine.  If you know what :regexp:`(?{ code })` means and do "
"something ill-advised with it, you'll get no sympathy from me!"
msgstr ""
"入力された正規表現は，直接 perl の正規表現エンジンを使って処理されます．"
"すなわち，perl の正規表現エンジンの力のすべてを使うことができるということです．"
"もし，:regexp:`(?{ code })` が何を意味しているのか知っていて，"
"よくないことをしたとしても，私は知りません！"

#: ../../ui/mark.rst:169
msgid ""
":demeter:`demeter` is copyright |copy| 2009-2016 Bruce Ravel |ndash| This"
" document is copyright |copy| 2016 Bruce Ravel"
msgstr ""

#: ../../ui/mark.rst:174
msgid ""
"This document is licensed under `The Creative Commons Attribution-"
"ShareAlike License <http://creativecommons.org/licenses/by-sa/3.0/>`__."
msgstr ""

#: ../../ui/mark.rst:178
msgid ""
"If :demeter:`demeter` and this document are useful to you, please "
"consider `supporting The Creative Commons "
"<http://creativecommons.org/support/>`__."
msgstr ""

