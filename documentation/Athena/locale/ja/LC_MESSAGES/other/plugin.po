# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Bruce Ravel
# This file is distributed under the same license as the Athena package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Athena 0.9.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-27 20:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../other/plugin.rst:44
msgid "File type plugins"
msgstr "ファイル読み込みプラグイン"

#: ../../other/plugin.rst:47
msgid "Extending :demeter:`athena` to read new file types"
msgstr "新しい形式のファイルを読み込むために Athena を拡張する"

#: ../../other/plugin.rst:49
msgid ""
":mark:`bend,..` :demeter:`athena` uses :demeter:`ifeffit`'s "
"`read\\_data() <http://cars9.uchicago.edu/~ifeffit/refman/node99.html>`__"
" function or :demeter:`larch`'s `read\\_ascii() "
"<http://xraypy.github.io/xraylarch/data/index.html>`__ function to import"
" data. This means that :demeter:`athena`'s notion of what is an "
"acceptable data format is completely identical to :demeter:`ifeffit`'s "
"(or :demeter:`larch`'s) notion. The contrapositive is also true |nd| if "
":demeter:`ifeffit` (or :demeter:`larch`) can read a data file, so can "
":demeter:`athena`."
msgstr ""
":mark:`bend,..` :demeter:`athena` はデータの読み込みに，:demeter:`ifeffit` の "
"`read\\_data() <http://cars9.uchicago.edu/~ifeffit/refman/node99.html>`__ 関数，あるいは "
":demeter:`larch` の `read\\_ascii() <http://xraypy.github.io/xraylarch/data/index.html>`__ 関数を"
"利用しています．これは，:demeter:`athena` が受け入れられるデータ形式は， "
":demeter:`ifeffit` (あるいは，:demeter:`larch`) と全く同じであるということです．"
"すなわち，もちろんのことですが，:demeter:`ifeffit` (あるいは，:demeter:`larch`)"
"が読み込める形式であれば，:demeter:`athena` も読み込めるということです．"

#: ../../other/plugin.rst:59
msgid ""
"In practice, this works great. :demeter:`ifeffit` is able to read the "
"data files generated by many of the world's XAS beamlines. And so, "
"consequently, is :demeter:`athena`. Sadly, there are many beamlines that "
"use a format that confounds :demeter:`ifeffit` and :demeter:`athena`. "
":demeter:`larch` is rather more intelligent, but still unable to read "
"some of the wackier file types. There are two obvious ways that I could "
"deal with data from those beamline:"
msgstr ""
"実際に，これはとてもうまくいっています．:demeter:`ifeffit` は世界の多くの XAS "
"ビームラインで生成されるデータファイルを読み込むことができます．よって，"
"また，:demeter:`athena` でも読み込むことができるということです．残念なことに，"
":demeter:`ifeffit` や :demeter:`athena` で読み込むことができない形式を使っているビームラインも"
"たくさんあります．そういったビームラインのデータを扱うためには，"
"2つの方法が考えられます．"

#: ../../other/plugin.rst:67
msgid ""
"Refuse to deal with them and require the user to transform the data into "
"a form that :demeter:`ifeffit` can handle."
msgstr ""
"それらのデータを直接を扱うのを諦め，:demeter:`ifeffit` が扱うことができる形式に変換する．"

#: ../../other/plugin.rst:70
msgid ""
"Hard-wire code into :demeter:`athena` to deal with each new data format "
"as I become aware of it."
msgstr ""
"新しいデータ形式に気づく度に :demeter:`athena` にそのファイルが読めるようなコードを足していく"

#: ../../other/plugin.rst:73
msgid ""
"Neither of those are particularly user-friendly. :demeter:`athena` "
"instead relies on a plugin architecture allowing :demeter:`athena` to be "
"extended on the fly to deal well with new data formats without having to "
"change the underlying code."
msgstr ""
"いずれもユーザーフレンドリーとは言えません．:demeter:`athena` はその代わりに，"
"内部のコードを変更することなしに，新しいデータ形式を直接扱えるように"
"拡張するためのプラグイン機構を持っています．"

#: ../../other/plugin.rst:78
msgid ""
"This page documents the plugin architecture so that :demeter:`athena`'s "
"users can write their own file type plugins."
msgstr ""
"このページでは :demeter:`athena` のユーザが自分のファイル形式のためのプラグインを"
"書くことができるようにプラグイン機構について説明します．"

#: ../../other/plugin.rst:84
msgid "Overview of how plugins work"
msgstr "プラグイン動作の概観"

#: ../../other/plugin.rst:86
msgid ""
"In simple language, a perl module is a short file containing special perl"
" code placed in a special location. :demeter:`athena` uses the code "
"contained in that file to recognize and pre-process data files so that "
"they can be imported properly using :demeter:`ifeffit` or "
":demeter:`larch`."
msgstr ""
"簡単に言うと，perl モジュールとは特別な場所に置かれた特別な perl の"
"コードを含む短いファイルのことです．:demeter:`athena` はそのファイルに含まれた"
"コードを使って，データファイル形式を認識して，:demeter:`ifeffit` で適切に読み込む"
"ことができるように前処理を行います．"

#: ../../other/plugin.rst:92
msgid ""
"In somewhat more technical language, a plugin is just `a perl module "
"<http://perldoc.perl.org/perlmod.html>`__ placed on your computer in a "
"place where it can be found. This file is used when :demeter:`athena` "
"starts and its methods are available when data are imported."
msgstr ""
"もう少し技術的にいうと，プラグインとはあなたのコンピュータのパスの"
"通っている場所に置かれた単なる perl モジュールです．このファイルは "
":demeter:`athena` が起動した際に読み込まれ，データ読み込みの際に利用できるように
"なります．"

#: ../../other/plugin.rst:97
msgid ""
"When a plugin is available for use, it is invoked every time a file is "
"imported into :demeter:`athena` using the Open file function. The new "
"file is checked using one of the plugin's methods to ascertain if the "
"file is of the sort serviced by the plugin. If the file is recognized, "
"another method in the plugin transforms the original data file into a "
"form that is readable by :demeter:`ifeffit` or :demeter:`larch`. This "
"transformation is done in a way that leaves the original data file "
"unchanged."
msgstr ""
"プラグインが有効化されていると，Open file 機能で :demeter:`athena` にファイルが"
"読み込まれる度にプラグインの機能が呼び出されます．その際，プラグインの"
"持つメソッドのうちの1つを使って，読み込もうとしているファイルが"
"そのプラグインによって変換されるべきものなのか確認します．もし，その"
"ファイルが変換対象であれば，プラグインにある他のメソッドが元の"
"データファイルを :demeter:`ifeffit` が読むことができる形式に変換します．"
"この変換は元のデータファイルに変更を加えることなく行われます．"

#: ../../other/plugin.rst:106
msgid ""
"If the transformation is successful, the user is presented with "
":demeter:`athena`'s column selection dialog and can import data in the "
"normal manner.  Ideally, a plugin is written in a way that makes the "
"import of the data into :demeter:`athena` a completely transparent "
"process for the user."
msgstr ""
"変換がうまくいくと，:demeter:`athena` の列選択ダイアログが表示され，"
"いつもと同じようにデータを読み込むことができます．うまく書かれた"
"プラグインは，理想的にはデータを :demeter:`athena` に読み込むときにユーザからは"
"全く見えないプロセスとなります．"

#: ../../other/plugin.rst:115
msgid "Example plugin"
msgstr "プラグインの例"

#: ../../other/plugin.rst:117
msgid ""
"Here is a complete example of a functional plugin taken from the "
":demeter:`demeter` distribution. This plugin allows :demeter:`athena` to "
"import files from NSLS beamline X10C. As you can see, the plugin is quite"
" short. The following sections of this page will explain this example in "
"detail."
msgstr ""
"ここには，:demeter:`demeter` に含まれ，うまく動作するプラグインの完全な"
"例について説明します．:demeter:`athena` はこのプラグインを使って NSLS のビームライン"
" X10C のファイルを読み込むことができます．ご覧のように，プラグインは"
"非常に短いものです．このページの続きではこの例について詳しく説明します．"

#: ../../other/plugin.rst:194
msgid "Namespace"
msgstr "名前空間"

#: ../../other/plugin.rst:196
msgid ""
"The module must be in a particular namespace. The namespace is defined by"
" the package function on line 1 of the example. The package must be below"
" the ``Demeter::Plugins`` namespace and should have a name that is "
"descriptive of what format it is made for. In the case of the example, "
"the plugin is intended to transform files from NSLS beamline X10C, so the"
" full namespace of the module is ``Demeter::Plugins::X10C``. Lines 3, 4, "
"62, and 63 are some requisite boilerplate which allow this module to work"
" properly with :demeter:`demeter` and :demeter:`athena`."
msgstr ""
"モジュールは特定の名前空間に含まれている必要があります．名前空間は例の"
"1行目にパッケージ関数で定義されています．パッケージは ``Demeter::Plugins`` "
" 名前空間の下にある必要があり，そのプラグインがどのような形式のために"
"書かれたか記述されている名前であるべきです．例の場合，プラグインは"
" NSLS のビームライン X10C のファイルを変換するように意図されているので，"
"モジュールの全名前空間は ``Demeter::Plugins::X10C`` です．3, 4, 62, 63 "
"行目は，:demeter:`demeter` や :demeter:`athena` でこのモジュールがうまく動作するようにする"
"ための必須の決まり文句です．"

#: ../../other/plugin.rst:209
msgid "Required methods and variables"
msgstr "必須のメソッドと変数"

#: ../../other/plugin.rst:211
msgid ""
"The plugin must supply three methods and must set several attributes of "
"the Plugin object."
msgstr ""
"プラグインでは3つのメソッドとプラグインオブジェクトのいくつかの要素を設定しなければなりません．"

#: ../../other/plugin.rst:217
msgid "required attributes"
msgstr "必須要素"

#: ../../other/plugin.rst:219
msgid ""
"Lines 12-14 define the two required variables in a way that allows them "
"to be accessed outside the scope of this module."
msgstr ""
"12 - 14 行目ではこのモジュールのスコープの外から扱えるようにするための2つの必須の変数を定義しています．"

#: ../../other/plugin.rst:224
msgid "``is_binary``"
msgstr ""

#: ../../other/plugin.rst:223
msgid ""
"(Line 6) A boolean that tells :demeter:`athena` whether the input file "
"format is in a text or binary format. :demeter:`athena` handles binary "
"files slightly differently in the column selection dialog."
msgstr ""
"(6行目) この真偽値は :demeter:`athena` に対して，入力ファイルがテキスト形式なのか"
"バイナリ形式なのかを伝えます．:demeter:`athena` において，バイナリファイルを"
"列選択ダイアログで少し異なった扱われ方をします．"

#: ../../other/plugin.rst:228
msgid "``description``"
msgstr ""

#: ../../other/plugin.rst:227
msgid ""
"(Line 7) A short text string describing the purpose of this plugin. This "
"string will be displayed in the plugin registry. This description should "
"be no more than a few dozen characters."
msgstr ""
"(7行目) このプラグインの目的を簡潔に記述した短いテキスト．この文字列は"
"プラグインレジストリに表示されます．この記述内容はおよそ 30 文字以下であるべきです．"

#: ../../other/plugin.rst:230
msgid "``version``"
msgstr ""

#: ../../other/plugin.rst:231
msgid "(Line 8) This is a numeric version of the plugin."
msgstr "(8行目) このプラグインの（数値で示された）バージョン "

#: ../../other/plugin.rst:233
msgid "``metadata_ini``"
msgstr ""

#: ../../other/plugin.rst:233
msgid ""
"The file in ``share/xdi/`` folder that contains metadata common to the "
"beamline and facility."
msgstr ""
"``share/xdi/`` フォルダにあるファイルでビームラインや施設に共通のメタデータを含むもの"

#: ../../other/plugin.rst:239
msgid "``headers``"
msgstr ""

#: ../../other/plugin.rst:236
msgid ""
"A reference to a hash containing additional metadata related to the work "
"done by the plugin."
msgstr ""
"プラグインによってなされることに関係する追加的なメタデータを含むハッシュ"
"へのリファレンス"

#: ../../other/plugin.rst:242
msgid "the ``is`` method"
msgstr "``is`` メソッド"

#: ../../other/plugin.rst:244
msgid ""
"Lines 12-23 show the ``is`` method. This method is called by "
":demeter:`athena` to try to recognize an input data file as being of a "
"particular format. In the case of this example, the X10C file is "
"recognized by some of the text in the first few lines of the files. When "
"the file is recognized, this method returns a true value. If the test "
"fails, it returns 0. When :demeter:`athena` sees the true return value, "
"it applies the fix method to transform the data file into an "
":demeter:`ifeffit`- or :demeter:`larch`-friendly format."
msgstr ""
"12 - 23 行目は，is メソッドです．このメソッドは，:demeter:`athena` が"
"入力データファイルがある特定のフォーマットであるか確認するために使われます．"
"この例の場合，X10C ファイルはファイルの最初の 2, 3 行の含まれる"
"テキストによって認識されます．ファイルが認識されると，このメソッドは true を"
"返します．もし，テストが失敗すれば，0 を返します．true が返ってくると，"
":demeter:`athena` はデータファイルを :demeter:`ifeffit` あるいは :demeter:`larch` "
"で扱える形式に変換するための fix メソッドを実行します．"

#: ../../other/plugin.rst:253
msgid ""
"It is quite important that the is method be fast. It is possible that a "
"data file will have to be tested against a large number of plugins. If "
"the is method is slow, file import will be slow."
msgstr ""
"is メソッドが速いことは重要です．データファイルはたくさんのプラグインに"
"よってテストされるかもしれません．もしこのメソッドが遅ければ，ファイル"
"読み込みが遅くなってしまいます．"

#: ../../other/plugin.rst:260
msgid "the ``fix`` method"
msgstr "``fix`` メソッド"

#: ../../other/plugin.rst:262
msgid ""
"Lines 26-46 show the ``fix`` method. This method is called when the is "
"method returns true. In some manner it makes a copy of the original data "
"file and transforms that copy into a form that can be read by "
":demeter:`ifeffit` or :demeter:`larch`. This method needs to follow a "
"number of strict rules, however within those rules there is a lot of "
"flexibility about how the transformation is accomplished and the scope of"
" what that transformation does to the data."
msgstr ""
"26 - 46 行目は fix メソッドです．このメソッドは is メソッドが true を"
"返したときに実行されます．ある方法で，元のデータファイルのコピーを作り，"
"そのコピーを :demeter:`ifeffit` あるいは :demeter:`larch` が読むことの"
"できる形式に変換します．このメソッドはいくつかの厳密なルールにしたがう"
"必要がありますが，これらのルールを守れば，変換をどのように行うか，"
"またデータに対してどのような変換を行うかという範囲について柔軟に扱うことが出来ます．"

#: ../../other/plugin.rst:270
msgid ""
"First and most important, never alter the original data! Either work on "
"the contaents of the original file in memory or make a copy of the data, "
"preferably in the stash folder (a folder known to :demeter:`demeter` as a"
" place for writing scratch files). At line 29, we see that file is opened"
" in the stash folder for holding the transformed data. As the data is "
"processed, the output is written to that file (see lines 36 and 40)."
msgstr ""
"まず，最も重要なのは，元のデータを一切変更しないことです！"
"メモリの中の元のファイルの中身やデータのコピーを行う場合には，"
"stash フォルダで行うのがよいです（このフォルダは :demeter:`demeter` にとっては "
"scratch のファイルを書き出すための場所です．）．29行目では変換されたデータを"
"保持するためにファイルが stash フォルダで開かれることがわかります．"
"データが処理されると，出力はそのファイルに対して行われます．"
"（36行目と40行目を見てください）"

#: ../../other/plugin.rst:278
msgid ""
"Do whatever chore needs doing to transform the portion of the original "
"data file that needs attention. Afterwords close both the input and "
"output files. It is esential that the files be closed, particularly on "
"Windows, which locks opened files from other uses."
msgstr ""
"元データファイルで注意を払うべき部分の変換に必要なことを行ってください．"
"その後で，入力ファイルと出力ファイルを閉じてください．これらのファイルを"
"閉じておくのは，特に Windows のように他のプロセスからの利用を防ぐために"
"ファイルをロックしてしまうような場合に重要です．"

#: ../../other/plugin.rst:283
msgid ""
"Finally set the ``fixed`` attribute of the object to the path and name of"
" the transformed file and return that same string."
msgstr ""
"最終的に，オブジェクトの ``fix`` された要素のパスと変換されたファイルの"
"名前を設定し，同じ文字列を返します．"

#: ../../other/plugin.rst:286
msgid ""
"In the example given on this page, the first thing the ``fix`` method "
"does is to create a file name in the stash directory for the transformed "
"file. Line 28 tells :demeter:`athena` to give the stash file the same "
"name as the original file (before calling this method, :demeter:`athena` "
"sets the ``filename`` attribute appropriately) but in the stash directory"
" (the catfile method builds a fully resolved filename in a platform "
"transparent manner). Line 29 checks the length of the fully resolved "
"filename to avoid running into one of :demeter:`ifeffit`'s internal "
"limitations."
msgstr ""
"このページに示されている例では，``fix`` メソッドが最初に行うことは，"
"変換されたファイルのために stash ディレクトリ内のファイル名を作ることです．"
"28行目では，:demeter:`athena` は元のファイル名と同じ stash ファイルを stash "
"ディレクトリ内に作っています．（このメソッドが呼ばれる前に，:demeter:`athena` は，"
"``filename`` 要素を適切に設定しています．）（catfile メソッドは"
"プラットフォームに依存しないファイル名を作成します．）29行目では，"
":demeter:`ifeffit` に内部的な制限に引っかからないようにファイル名の長さを確認しています．"

#: ../../other/plugin.rst:296
msgid ""
"Three things are done to transform an X10C file. The header is stripped "
"of null characters, the header is commented out by putting ``#`` "
"characters in the first column, and a formatting problem in some files "
"involving a lack of white space between columns is resolved. Each line of"
" the original file is read, operated on, and written to the transformed "
"file in the stash directory. The while loop starting at line 34 reads "
"through the file line-by-line and performs the operations."
msgstr ""
"X10C ファイルを変換するためには3つの処理が行われます．ヘッダーはヌル文字で"
"取り除かれます．ヘッダーは行頭に ``#`` をつけてコメントアウトされ，"
"列の間に空白がないためにファイルの変換がうまくいかないという問題が"
"解決されます．元のファイルは1行ずつ読み込まれて処理され，stash ディレクトリに"
"ある変換後のファイルに書き込まれていきます．34行目から始まる while ループで"
"ファイルは一行ずつ読み込まれて処理が行われます．"

#: ../../other/plugin.rst:305
msgid ""
"Lines 42 and 43 close the original and new file handles. The filter "
"should always close the file handles. This is not such a huge issue under"
" unix, but Windows places a lock on any open file handle. If you fail to "
"close one, for as long as :demeter:`athena` is running no other process "
"will be able to do anything with that file."
msgstr ""
"42 行目と 43 行目は元のファイルおよび新しいファイルのハンドラを閉じています．"
"フィルターは常にファイルハンドラを閉じる必要があります．これは unix では"
"大した問題ではありませんが，Windows 上ではファイルハンドラが開かれていると"
"ロックがかかってしまいます．もしファイル閉じるのに失敗すると，:demeter:`athena` が"
"実行されている間，他のプロセスではそのファイルに対して何もできなくなって"
"しまいます． 

#: ../../other/plugin.rst:311
msgid ""
"At line 45, the method returns with the fully resolved name of the "
"transformed file. At no point was the original file altered. When "
":demeter:`athena` exits, it will clean up the stash directory, thus "
"avoiding a pile up of unnecessary data files."
msgstr ""
"45 行目では変換されたファイルの完全なファイル名を返しています．"
"元のファイルはどのような意味でも変更されません．:demeter:`athena` が終了すると，"
"stash ディレクトリを片付けるので，不要なデータファイルが積み上がって"
"しまうことはありません．"

#: ../../other/plugin.rst:316
msgid ""
":demeter:`demeter` ships with a number of differnt kinds of plugins. Some"
" of them perform simple, linear transofrmations (like this one). Others "
"interpret binary data. A couple export project files rather than data "
"files. One even performs an on-the-fly deadtime correction for data from "
"an energy dispersive detector. Examine them for hints about how to create"
" your own plugins."
msgstr ""
":demeter:`demeter` は様々な種類のプラグインと共に提供されています．これらのうちの"
"いくつかは（上の例のように）単純な変換を行います．他のものはバイナリデータを"
"解釈します．いくつかのものはデータファイルではなくプロジェクトファイルを"
"出力します．あるいはエネルギー分散型検出器からのデータに対してその場で"
"デッドタイム補正を行うものもあります．これらを見て，あなた自身がプラグインを"
"作る参考にしてください．"

#: ../../other/plugin.rst:326
msgid "the ``suggest`` method"
msgstr "``suggest`` メソッド"

#: ../../other/plugin.rst:328
msgid ""
"Lines 48-59 show the ``suggest`` method. This provides feedback for use "
"by the `column selection dialog <../import/columns.html>`__ is selecting "
"initial guesses for the columns containing the numerator and denominator "
"of the data. In this case, the method suggests columns for transmission "
"data butmakes no suggestions of fluorescence data."
msgstr ""
"48 - 59 行目は ``suggest`` メソッドです．これは，列選択ダイアログにおける"
"データの分子と分母を含む列の初期推定を行います．この場合，透過法であれば"
"適当な列を推定しますが，蛍光法のデータに対しては推定を行いません．"

#: ../../other/plugin.rst:337
msgid ":demeter:`athena`'s plugin registry"
msgstr "Athena のプラグイン登録"

#: ../../other/plugin.rst:339
msgid ""
"Because there might be a large number of file type plugins, it is "
"possible for the user to turn the checks for the file types on and off.  "
"In the main menu, you will find the :guilabel:`Plugin Registry`. This is "
"a simple list of all plugins found in the system and user directories. "
"The check buttons enable and disable the plugins. The value of the "
"``description`` attribute is displayed in the list (so be sure to choose "
"a suitable and suitably short value for that variable)."
msgstr ""
"たくさんのファイル読み込み用プラグインがあるかもしれないので，"
"どのプラグインを有効化するかについてチェックボックスで変更することが"
"できます．メインメニューには :guilabel:`Plugin Registry` があります．"
"これは，システムおよびユーザのディレクトリで見つかるすべてのプラグインの"
"リストです．チェックボックスを使って，プラグインを有効化あるいは"
"無効化することができます．リストには ``description`` 変数の値が表示されます．"
"（よって，この変数には適切かつ適当に短い値を入れてください）"

#: ../../other/plugin.rst:353
msgid "The plugin registry."
msgstr "プラグイン登録"

#: ../../other/plugin.rst:355
msgid ""
"Note that the order in which the plugins are displayed above is the same "
"order in which files are checked against the plugins. User plugins are "
"checked before system plugins. After that the plugins are ordered "
"alphabetically. If you want your system plugins to be checked against the"
" data first, choose a name that comes early in the alphabetical sense."
msgstr ""
"プラグインが表示される順番はファイルがプラグインによってチェックされる"
"順番と同じだということに注意してください．ユーザープラグインはシステム"
"プラグインの前にチェックされます．その後はプラグインはアルファベット順に"
"並べられます．もし，まずシステムプラグインをデータに対して適用したければ，"
"アルファベット順で初めの方にくるような名前をつけてください．"

#: ../../other/plugin.rst:362
msgid ""
"Right-clicking :mark:`rightclick,..` on an item in the registry posts the"
" context menu shown in the figure above. All such context menus have at "
"least one item for reading the documentation contained in the plugin "
"source code file. Some plugins, such as the one shown, also provide a way"
" of configuring the behavior of the plugin."
msgstr ""
"登録画面の項目を右クリックすると，上の図に示したようなコンテキスト"
"メニューが表示されます．このようなコンテキストメニューでは少なくとも"
"プラグインのソースコードに含まれるドキュメントを読むための項目が1つ"
"含まれます．他のプラグインでは，例えば上に示したようにプラグインの"
"挙動を変更する方法を提供している場合もあります．"

#: ../../other/plugin.rst:371
msgid "System plugins and user plugins"
msgstr "システムプラグインとユーザープラグイン"

#: ../../other/plugin.rst:373
msgid ""
":demeter:`athena` looks in two different places for these plugins. One "
"place is in :demeter:`athena`'s installation location where it finds the "
"plugins that come with the horae distribution. The other is in the user's"
" space (on Windows plugins are located in ``C:\\\\Program "
"File\\\\Ifeffit\\\\horae\\\\Ifeffit\\\\Plugins\\\\Filetype\\\\Athena\\\\``,"
" on unix ``$HOME/.horae/Ifeffit/Plugins/Filetype/Athena/)``. In both "
"places, it reads the contents of the plugin directory and attempts to "
"import the files which end in .pm."
msgstr ""
":demeter:`athena` はこれらのプラグインを2つの場所で探します．1つめは :demeter:`athena` が"
"インストールされたところで，:demeter:`demeter` ディストリビューションと"
"共にインストールされたプラグインを見つけることができます．もう1つは"
"ユーザの場所で（Windows では ``C:\\\\Program File\\\\Ifeffit\\\\horae\\\\Ifeffit\\\\Plugins\\\\Filetype\\\\Athena\\\\`` "
"にあり，unix では ``$HOME/.horae/Ifeffit/Plugins/Filetype/Athena/``）"
"です．両方の場所で，.pm で終わるファイルをプラグインとして読み込もうとします．"

#: ../../other/plugin.rst:384
msgid "Miscellaneous advice on plugins"
msgstr "プラグインに関する雑多なアドバイス"

#: ../../other/plugin.rst:386
msgid ""
"Cut-n-paste is an excellent way to get started on a new plugin. Make a "
"copy of a plugin for a file that is similar to your own file and use that"
" as the basis for your new plugin."
msgstr ""
"カットアンドペーストは新しいプラグインを作るよい方法です．"
"あなたのファイルに似たファイルのためのプラグインのコピーを作り，"
"新しいプラグインの元としてみて下さい．"

#: ../../other/plugin.rst:390
msgid "``X15B.pm`` is an example of a plugin for a binary format."
msgstr "``X15B.pm`` はバイナリ形式のデータのためのプラグインの例です． "

#: ../../other/plugin.rst:392
msgid ""
"You can use any module that you need, thus you have all of CPAN available"
" to you when designing your plugin. If you need to do any seriously heavy"
" lifting, check out the ``Math::Pari`` module or the `Perl Data Language "
"<http://pdl.perl.org>`__"
msgstr ""
"必要とするどんなモジュールを使っても構いません．すなわち，自分用のプラグインを"
"設計するときには CPAN にあるすべてのモジュールが使えます．もし，かなり"
"重たい仕事をしないといけないような場合は，``Math::Pari`` モジュールや "
"`Perl Data Language <http://pdl.perl.org>`__ についてチェックしてみてください．"

#: ../../other/plugin.rst:397
msgid ""
"Although a well-tested, robust plugin should be your goal, one of the "
"nice features of the plugin architecture is that a :quoted:`good-enough` "
"plugin is easy to write and can quickly get you over a hurdle."
msgstr ""
"よくテストされ，ロバストなプラグインが目標だとは思いますが，プラグイン"
"機構のよいところは :quoted:`good-enough` プラグインは簡単に書け，"
"ファイル読み込みという困難を素早く乗り越えることができるという点にあります．"

#: ../../other/plugin.rst:410
msgid ""
":demeter:`demeter` is copyright |copy| 2009-2016 Bruce Ravel |ndash| This"
" document is copyright |copy| 2016 Bruce Ravel"
msgstr ""

#: ../../other/plugin.rst:415
msgid ""
"This document is licensed under `The Creative Commons Attribution-"
"ShareAlike License <http://creativecommons.org/licenses/by-sa/3.0/>`__."
msgstr ""

#: ../../other/plugin.rst:419
msgid ""
"If :demeter:`demeter` and this document are useful to you, please "
"consider `supporting The Creative Commons "
"<http://creativecommons.org/support/>`__."
msgstr ""

